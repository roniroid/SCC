@using SCC.Controllers;
@using SCC_BL;

@model SCC.ViewModels.TransactionSearchViewModel

@{
    User actualUser = (User)Session[SCC_BL.Settings.AppValues.Session.GLOBAL_ACTUAL_USER];

    int mainCategoryID = (int)SCC_BL.DBValues.Catalog.ELEMENT.ELEMENT_TRANSACTION;

    string mainControllerName = OverallController.GetControllerName(typeof(TransactionController));

    string logsControllerName = OverallController.GetControllerName(typeof(LogController));
    string logsActionName = nameof(LogController.Index);

    bool hasModel = Model.TransactionSearchHelper != null;

    //Starts loading data

    List<Catalog> allResultList = (List<Catalog>)ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.AllData.ResultCatalog.NAME];
    List<User> allUserList = (List<User>)ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.AllData.User.NAME];

    //Finish loading data

    ViewBag.Title = "Búsqueda de transacciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/panel")
@Styles.Render("~/Content/radio")

@*@Styles.Render("~/Content/datatables")
    @Scripts.Render("~/bundles/datatables")*@

<link href="~/Content/DataTables/datatables.min.css" rel="stylesheet" />
<script src="~/Content/DataTables/datatables.min.js"></script>

<link href="~/Content/Custom/Chosen/chosen.min.css" rel="stylesheet" />
<script src="~/Content/Custom/Chosen/chosen.jquery.min.js"></script>

<link href="~/Content/Custom/Datatables/custom-datatables.css" rel="stylesheet" />

@if (actualUser.HasPermission(SCC_BL.DBValues.Catalog.Permission.CAN_SEARCH_TRANSACTIONS))
{
    string formAction = @Url.Action(nameof(TransactionController.Search), mainControllerName);

    <form id="frmManage" action="@Url.Action(nameof(TransactionController.Search), TransactionController.GetControllerName(typeof(TransactionController)))" method="post">
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="accordionUserData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseUserData" aria-expanded="true" aria-controls="collapseUserData">
                            <strong> Datos relacionados con el usuario</strong>
                        </button>
                    </h2>
                    <div id="collapseUserData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionUserData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Identificación del usuario
                                </div>
                                <div class="col-3">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.UserIdentificationTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.StringTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Tipo de búsqueda",
                                            placeholder = "Tipo de búsqueda",
                                            title = "Tipo de búsqueda",
                                            id = "ddlUserIdentificationTypeID"
                                        }
                                    )
                                </div>
                                <div class="col-6">
                                    @{
                                        List<User> userList = (List<User>)ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.UserList.NAME];
                                    }

                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.UserIdentification,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación del usuario",
                                            autocomplete = "off",
                                            list = "dataListUser"
                                        })

                                    <datalist id="dataListUser">
                                        @foreach (User user in userList)
                                        {
                                            <option value="@user.Person.Identification">@($"{ user.Person.Identification } - { user.Person.SurName }, { user.Person.FirstName } - { user.Email }")</option>
                                        }
                                    </datalist>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Estado del usuario
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.UserStatusID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.UserStatus.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Seleccione un valor",
                                            placeholder = "Seleccione un valor",
                                            title = "Seleccione un valor",
                                            id = "ddlUserStatusID"
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Seleccione los puestos de trabajo
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.WorkspaceIDList,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.Workspace.NAME] as MultiSelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Puestos disponibles",
                                            placeholder = "Puestos disponibles",
                                            title = "Puestos disponibles",
                                            multiple = "",
                                            id = "ddlWorkspaceIDList"
                                        }
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="collapseProgramData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseProgramData" aria-expanded="true" aria-controls="collapseProgramData">
                            <strong> Datos relacionados con el programa</strong>
                        </button>
                    </h2>
                    <div id="collapseProgramData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#collapseProgramData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Seleccione los programas donde las transacciones fueron cargadas
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.ProgramIDList,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.ProgramList.NAME] as MultiSelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Programas disponibles",
                                            placeholder = "Programas disponibles",
                                            title = "Programas disponibles",
                                            multiple = "",
                                            id = "ddlProgramIDList"
                                        }
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="accordionTransactionData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseTransactionData" aria-expanded="true" aria-controls="collapseTransactionData">
                            <strong> Datos relacionados con la transacción</strong>
                        </button>
                    </h2>
                    <div id="collapseTransactionData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionTransactionData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    El identificador de la transacción contiene el siguiente valor
                                </div>
                                <div class="col-7">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionIdentifier,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación de la transacción",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Identificación del monitoreador
                                </div>
                                <div class="col-3">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.MonitorUserIdentificationTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.StringTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Tipo de búsqueda",
                                            placeholder = "Tipo de búsqueda",
                                            title = "Tipo de búsqueda",
                                            id = "ddlMonitorUserIdentificationTypeID"
                                        }
                                    )
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.MonitorUserIdentification,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación del monitoreador",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Fechas
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    La fecha de la transacción está entre
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateFrom,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha desde",
                                            title = "Fecha desde",
                                            autocomplete = "off",
                                            type = "datetime-local",
                                            @*@Value =
                                                Model.TransactionSearchHelper.TransactionDateFrom != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.TransactionDateFrom).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty*@
                                        }
                                    )
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateTo,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha hasta",
                                            title = "Fecha hasta",
                                            autocomplete = "off",
                                            type = "datetime-local",
                                            @*@Value =
                                                Model.TransactionSearchHelper.TransactionDateTo != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.TransactionDateTo).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty*@
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    Buscar desde hace
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateSince,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            aria_label = "Cantidad",
                                            autocomplete = "off",
                                            type = "number",
                                            min = "0"
                                        })
                                </div>
                                <div class="col-4">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateSinceTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.TimeUnitTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Unidad de tiempo",
                                            placeholder = "Unidad de tiempo",
                                            title = "Unidad de tiempo",
                                            id = "ddlTransactionDateSinceTypeID"
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    La fecha de la evaluación está entre
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateFrom,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha desde",
                                            title = "Fecha desde",
                                            autocomplete = "off",
                                            type = "datetime-local",
                                            @*@Value =
                                                Model.TransactionSearchHelper.EvaluationDateFrom != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.EvaluationDateFrom).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty*@
                                        }
                                    )
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateTo,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha hasta",
                                            title = "Fecha hasta",
                                            autocomplete = "off",
                                            type = "datetime-local",
                                            @*@Value =
                                                Model.TransactionSearchHelper.EvaluationDateTo != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.EvaluationDateTo).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty*@
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    Buscar desde hace
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateSince,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            aria_label = "Cantidad",
                                            autocomplete = "off",
                                            type = "number",
                                            min = "0"
                                        })
                                </div>
                                <div class="col-4">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateSinceTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.TimeUnitTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Unidad de tiempo",
                                            placeholder = "Unidad de tiempo",
                                            title = "Unidad de tiempo",
                                            id = "ddlEvaluationDateSinceTypeID"
                                        }
                                    )
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Texto etiquetas y comentarios
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en la observación general para la llamada
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de la transacción",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1 d-none">
                                    <button class="btn-element-action btn-element-action-dark" title="Caracteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en uno de sus atributos
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.AttributeNameText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en atributos",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1 d-none">
                                    <button class="btn-element-action btn-element-action-dark" title="Caracteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en uno de los comentarios de sus atributos
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.AttributeCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en comentarios de atributos",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1 d-none">
                                    <button class="btn-element-action btn-element-action-dark" title="Caracteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La transacción incluye alguna de estas etiquetas
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionLabelText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en etiquetas",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1">
                                    <button class="btn-element-action btn-element-action-dark" title="Separar cada entrada con una coma" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            @*<hr />
                                <div class="row d-block text-center m-5">
                                    <h3>
                                        Inteligencia de negocios
                                    </h3>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        La evaluación incluye las siguientes preguntas de inteligencia de negocios
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Texto en etiquetas",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>*@
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Estados de la llamada
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El comentario de disputa incluye el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DisputationText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de disputa",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El comentario de invalidación incluye el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.InvalidationText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de invalidación",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="d-none">
                                <hr />
                                <div class="row d-block text-center m-5">
                                    <h3>
                                        Coaching enviado / leído
                                    </h3>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El usuario ha enviado el coaching
                                    </div>
                                    <div class="col-6">
                                        @Html.DropDownListFor(modelitem =>
                                            Model.TransactionSearchHelper.CoachingSent,
                                            (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.YesNoQuestion.NAME] as SelectList),
                                            new
                                            {
                                                @class = "property-field-control",
                                                id = "ddlCoachingSent"
                                            })
                                    </div>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El usuario ha leído el coaching
                                    </div>
                                    <div class="col-6">
                                        @Html.DropDownListFor(modelitem =>
                                            Model.TransactionSearchHelper.CoachingRead,
                                            (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.YesNoQuestion.NAME] as SelectList),
                                            new
                                            {
                                                @class = "property-field-control",
                                                id = "ddlCoachingRead"
                                            })
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Errores controlables
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Filtro por error controlable
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.ControllableErrorFilterTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Transaction.Search.YesNoQuestion.NAME] as SelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Filtro por error controlable",
                                            placeholder = "Filtro por error controlable",
                                            title = "Filtro por error controlable",
                                            id = "ddlControllableErrorFilterTypeID"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Devolución y seguimiento
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Los comentarios de devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de devolución",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Las fortalezas en la devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionStrengthCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fortalezas",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Los pasos de mejora en la devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionImprovementStepsCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Pasos de mejora",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            @*<div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El seguimiento de las fortalezas incluye el siguiente texto
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Pasos de mejora",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El seguimiento de los pasos de mejora incluye el siguiente texto
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Pasos de mejora",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>*@
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Campos personalizados
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    La evaluación incluye el siguiente texto como etiqueta en uno de los campos opcionales
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.CustomFieldLabelText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Etiqueta",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    La evaluación incluye el siguiente texto como valir en uno de los campos opcionales
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.CustomFieldValueText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Valor",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel text-center">
            <button class="btn-custom-system btn-custom-system-secondary" id="btnCancel" type="button">Cancelar</button>
            <button id="btnSubmit" class="btn-custom-system btn-custom-system-primary" type="submit">Buscar</button>
        </div>
    </form>
}

<div class="tableContainer">
    <table class="display cell-border" id="tbInfo">
        <thead>
            <tr>
                <th class="rotate">
                    <input class="transaction-selected-all" type="checkbox" />
                </th>
                <th class="rotate">
                    Identificador
                </th>
                <th class="rotate">
                    Usuario monitoreado
                </th>
                <th class="rotate">
                    Supervisor
                </th>
                <th class="rotate">
                    Fecha de la transacción
                </th>
                <th class="rotate">
                    Fecha de la evaluación
                </th>
                <th class="rotate">
                    Programa
                </th>
                <th class="rotate">
                    Monitoreado por
                </th>
                <th class="rotate">
                    Comentario
                </th>
                <th class="rotate">
                    EC Global
                </th>
                <th class="rotate">
                    EC Usuario Final
                </th>
                <th class="rotate">
                    EC Negocios
                </th>
                <th class="rotate">
                    EC Cumplimiento
                </th>
                <th class="rotate">
                    Estado coaching recibido
                </th>
                <th class="rotate">
                    Disputado
                </th>
                <th class="rotate">
                    Invalidado
                </th>
                <th class="rotate">
                    Devolución
                </th>
                <th>
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Transaction transaction in Model.TransactionList)
            {
                bool hasInvalidation = transaction.InvalidationCommentaries.Count() > 0;

                string tableRowClass = string.Empty;
                if (transaction.BasicInfo.StatusID == (int)SCC_BL.DBValues.Catalog.STATUS_TRANSACTION.DELETED)
                {
                    tableRowClass +=
                        string.IsNullOrEmpty(tableRowClass) ?
                            "strikethrough" :
                            " strikethrough";
                }

                <tr class="@tableRowClass @(hasInvalidation ? "has-invalidation" : string.Empty)" data-transactionid="@transaction.ID">
                    <td class="d-flex justify-content-center align-content-center">
                        <input class="transaction-selected" type="checkbox" />
                    </td>
                    <td>
                        <a href="@Url.Action(nameof(TransactionController.Edit), OverallController.GetControllerName(typeof(TransactionController)), new { transactionID = transaction.ID })" target="_blank">@transaction.Identifier</a>
                    </td>
                    <td>@transaction.UserToEvaluate.Person.SurName, @transaction.UserToEvaluate.Person.FirstName</td>
                    <td>
                        <ul>
                            @foreach (UserSupervisorCatalog userSupervisorCatalog in transaction.UserToEvaluate.SupervisorList)
                            {
                                User supervisorUser = allUserList.Where(e => e.ID == userSupervisorCatalog.SupervisorID).FirstOrDefault();

                                <li>@supervisorUser.Person.SurName, @supervisorUser.Person.FirstName</li>
                            }
                        </ul>
                    </td>
                    <td data-order="@transaction.TransactionDate.ToString("yyyyMMdd")">@transaction.TransactionDate.ToString("dd/MM/yyyy")</td>
                    <td data-order="@transaction.EvaluationDate.ToString("yyyyMMdd")">@transaction.EvaluationDate.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.Program.Name</td>
                    <td>
                        @{ 
                            User evaluatorUser = allUserList.Where(e => e.ID == transaction.EvaluatorUserID).FirstOrDefault();
                        }

                        @evaluatorUser.Person.SurName, @evaluatorUser.Person.FirstName
                    </td>
                    <td>
                        @transaction.Comment
                    </td>
                    <td>
                        @{ 
                            Catalog controllableResult = allResultList.Where(e => e.ID == transaction.ControllableResultID).FirstOrDefault();
                        }

                        @controllableResult.Description
                    </td>
                    <td>
                        @{ 
                            Catalog controllableFUCEResult = allResultList.Where(e => e.ID == transaction.ControllableFinalUserCriticalErrorResultID).FirstOrDefault();
                        }

                        @controllableFUCEResult.Description
                    </td>
                    <td>
                        @{ 
                            Catalog controllableBCEResult = allResultList.Where(e => e.ID == transaction.ControllableBusinessCriticalErrorResultID).FirstOrDefault();
                        }

                        @controllableBCEResult.Description
                    </td>
                    <td>
                        @{ 
                            Catalog controllableFCEResult = allResultList.Where(e => e.ID == transaction.ControllableFulfillmentCriticalErrorResultID).FirstOrDefault();
                        }

                        @controllableFCEResult.Description
                    </td>
                    <td>
                        @*RELLENAR*@
                    </td>
                    <td class="text-center">
                        <button class="btn-element-action @(transaction.DisputeCommentaries.Count() > 0 ? "btn-element-action-primary" : "btn-element-action-secondary") btn-transaction-disputation" type="button" title="@(transaction.DisputeCommentaries.Count() > 0 ? "Existen disputas" : "No hay disputas")">
                            <i class='bx bx-link-external'></i>
                        </button>
                    </td>
                    <td class="text-center">
                        <button class="btn-element-action @(transaction.InvalidationCommentaries.Count() > 0 ? "btn-element-action-primary" : "btn-element-action-secondary") btn-transaction-invalidation" type="button" title="@(transaction.InvalidationCommentaries.Count() > 0 ? "Existen invalidaciones" : "No hay invalidaciones")">
                            <i class='bx bx-link-external'></i>
                        </button>
                    </td>
                    <td class="text-center">
                        <button class="btn-element-action @(transaction.DevolutionCommentaries.Count() > 0 ? "btn-element-action-primary" : "btn-element-action-secondary") btn-transaction-devolution" type="button" title="@(transaction.DevolutionCommentaries.Count() > 0 ? "Existen devoluciones" : "No hay devoluciones")">
                            <i class='bx bx-link-external'></i>
                        </button>
                    </td>
                    <td>
                        <button data-elementid="@transaction.ID" class="btn-element-action btn-element-action-primary btn-transaction-download-pdf" title="Descargar PDF">
                            <i class='bx bxs-download'></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    let infoTable = null;

    $(document).ready(function () {
        fetchDatatableBasicData().then(response => {
            const dateNow = new Date();
            let fileName = 'Resultados de búsqueda de transacciones' + '_' + dateNow.getFullYear() + '_' + (parseInt(dateNow.getMonth()) + 1).toString() + '_' + dateNow.getDate() + '_' + dateNow.getHours() + '_' + dateNow.getMinutes() + '_' + dateNow.getSeconds();

            let data = response;

            let customButton;

            let excelButton =
            {
                "title": null,
                "filename": fileName,
                "extend": "excel",
                "className": "btn-sm",
                "exportOptions": {
                    "columns": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
                    //"rows": getSelectedTransactionIndex(),
                    "rows": ":not('.strikethrough,.d-none')",
                }
            };

            let pdfButton =
            {
                "title": null,
                "filename": fileName,
                "extend": "pdfHtml5",
                "className": "btn-sm",
                "orientation": "landscape",
                "pageSize": "LEGAL",
                "exportOptions": {
                    "columns": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
                    //"rows": getSelectedTransactionIndex(),
                    "rows": ":not('.strikethrough,.d-none')",
                }
            };

            let copyButton =
            {
                "title": null,
                "filename": fileName,
                "extend": 'copy',
                "text": 'Copiar',
                "exportOptions":
                {
                    "modifier": {
                        page: 'current'
                    },
                    "columns": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
                    //"rows": getSelectedTransactionIndex(),
                    "rows": ":not('.strikethrough,.d-none')",
                }
            };

            customButton = {
                "title": "",
                "text": "Exportar en formato de importación",
                "className": "btn-sm border border-dark tb-export-btn-excel",
                "action": () => {
                    exportTransactionsFile();
                }
            };

            data["buttons"].push(excelButton);
            data["buttons"].push(pdfButton);
            data["buttons"].push(copyButton);
            data["buttons"].push(customButton);

            infoTable = startDataTable('#tbInfo', data);

            let toolbarControls = '';

            toolbarControls +=
                getControlForToolbar(
                    '<div class="radio-control d-inline-block"><input label="NO" id="filterActiveElements_NO" name="filterActiveElements" onchange="onChangefilterActiveElementsEvent(this);" type="radio" value="false" /><input label="SI" id="filterActiveElements_YES" name="filterActiveElements" onchange="onChangefilterActiveElementsEvent(this);" type="radio" value="true" checked /></div>',
                    'Mostrar invalidadas'
                );

            $('div.toolbar').html(toolbarControls);
        });

        fetchMultiSelectBasicData().then(response => {
            let data = response;

            startMultiSelect('#ddlUserIdentificationTypeID', data);
            startMultiSelect('#ddlUserStatusID', data);
            startMultiSelect('#ddlWorkspaceIDList', data);
            startMultiSelect('#ddlProgramIDList', data);
            startMultiSelect('#ddlMonitorUserIdentificationTypeID', data);
            startMultiSelect('#ddlTransactionDateSinceTypeID', data);
            startMultiSelect('#ddlEvaluationDateSinceTypeID', data);
            startMultiSelect('#ddlCoachingSent', data);
            startMultiSelect('#ddlCoachingRead', data);
            startMultiSelect('#ddlControllableErrorFilterTypeID', data);
        });

        @if (Model.TransactionList.Count() > 0)
        {
            @:window.location.href = '#tbInfo';
        }

        $('#filterActiveElements_YES').change();
    });

    function getControlForToolbar(content, label) {
        let result = '';

        const divPropertyField = '<div class="row property-field m-3">%replaceContent%</div>';

        const divPropertyFieldLabel = '<div class="col-5 property-field-label">' + label + '</div>';
        const contentContainer = '<div class="col-7">' + content + '</div>';

        result =
            divPropertyField
                .replace('%replaceContent%', divPropertyFieldLabel + contentContainer);

        return result;
    }

    function onChangefilterActiveElementsEvent(element) {
        let show = false;
        show = element.value == 'true';

        @*let elements = $('table#tbInfo tbody tr.has-invalidation');

        if (show) {
            $(elements).removeClass('d-none');
        } else {
            $(elements).addClass('d-none');
        }*@

        infoTable.rows().every(function () {
            if ($(this.node()).hasClass('has-invalidation')) {
                if (show) {
                    $(this.node()).removeClass('d-none');
                } else {
                    $(this.node()).addClass('d-none');
                }
            }
        });

        infoTable.draw();
    }

    @*async function exportTransactionsFile() {
        let transactionIDArray = [];

        transactionIDArray = await getTransactionIDArray();

        window.open('@Url.Action(nameof(TransactionController.ExportTransactionListToExcel), mainControllerName)?transactionIDArray=' + transactionIDArray.join(','), '_blank');
    }*@

    async function exportTransactionsFile() {
        let transactionIDArray = await getTransactionIDArray();

        if (transactionIDArray.length > 0) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action(nameof(TransactionController.ExportTransactionListToExcel), mainControllerName)';

            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'transactionIDArray';
            input.value = transactionIDArray.join(',');

            form.appendChild(input);

            document.body.appendChild(form);

            //console.log(transactionIDArray);
            form.submit();
        }
        else {
            alert('No se han seleccionado transacciones para exportar');
        }
    }

    async function getTransactionIDArray() {
        let response = [];

        let currentPage = $('#tbInfo').DataTable().page.info().page;
        let currentSearch = $('#tbInfo').DataTable().search();

        $('#tbInfo').DataTable().page.len(-1).draw();
        $('#tbInfo').DataTable().search('', false, false).draw();

        //response = $('#tbInfo').find('tbody tr').map((index, e) => $(e).data('transactionid')).get();
        response =
            $('#tbInfo')
                .find('tbody tr')
            .map((index, e) => {
                let hasInvalidation = $(e).hasClass('has-invalidation');
                let includeInvalidationTransactions = $('#filterActiveElements_YES').is(':checked');

                if (includeInvalidationTransactions) {
                    if ($(e).find('td input.transaction-selected:checked').length > 0) {
                        return $(e).data('transactionid');
                    }
                } else {
                    if (!hasInvalidation) {
                        if ($(e).find('td input.transaction-selected:checked').length > 0) {
                            return $(e).data('transactionid');
                        }
                    }
                }
            }).get();

        $('#tbInfo').DataTable().page.len(10).draw();
        $('#tbInfo').DataTable().page(currentPage).draw('page');
        $('#tbInfo').DataTable().search(currentSearch, false, false).draw();

        return await response;
    }

    $('.btn-transaction-disputation').click((e) => {
        let message = '¿Quieres salir de esta pantalla para editar el elemento?';

        const element = e.currentTarget;
        const parentRow = $(element).parent().parent();
        const elementID = $(parentRow).data('transactionid');

        if (confirm(message) == true) {
            window.open('@Url.Action(nameof(TransactionController.Edit), OverallController.GetControllerName(typeof(TransactionController)))?transactionID=' + elementID + '&hasDisputation=true', '_blank');
        }
    });

    $('.btn-transaction-invalidation').click((e) => {
        let message = '¿Quieres salir de esta pantalla para editar el elemento?';

        const element = e.currentTarget;
        const parentRow = $(element).parent().parent();
        const elementID = $(parentRow).data('transactionid');

        if (confirm(message) == true) {
            window.open('@Url.Action(nameof(TransactionController.Edit), OverallController.GetControllerName(typeof(TransactionController)))?transactionID=' + elementID + '&hasInvalidation=true', '_blank');
        }
    });

    $('.btn-transaction-devolution').click((e) => {
        let message = '¿Quieres salir de esta pantalla para editar el elemento?';

        const element = e.currentTarget;
        const parentRow = $(element).parent().parent();
        const elementID = $(parentRow).data('transactionid');

        if (confirm(message) == true) {
            window.open('@Url.Action(nameof(TransactionController.Edit), OverallController.GetControllerName(typeof(TransactionController)))?transactionID=' + elementID + '&hasDevolution=true', '_blank');
        }
    });

    $('#btnCancel').click(() => {
        window.open('@Url.Action(nameof(TransactionController.Search), mainControllerName)', '_self');
    });

    $('#btnSubmit').click(() => {
        const message = '¿Quiere guardar los cambios?';

        if (confirm(message) != true) {
            return false;
        }
    });

    $('.transaction-selected-all').change((e) => {
        let currentPage = $('#tbInfo').DataTable().page.info().page;
        let currentSearch = $('#tbInfo').DataTable().search();

        $('#tbInfo').DataTable().page.len(-1).draw();
        $('#tbInfo').DataTable().search('', false, false).draw();

        $('.transaction-selected').each((index, f) => {
            $(f)[0].checked = $(e.currentTarget)[0].checked;
        });

        $('#tbInfo').DataTable().page.len(10).draw();
        $('#tbInfo').DataTable().page(currentPage).draw('page');
        $('#tbInfo').DataTable().search(currentSearch, false, false).draw();
    });

    function getSelectedTransactionIndex() {
        const selectedRows = $('.transaction-selected:checked').closest('tr');
        const rowIndexes = selectedRows.map(function () {
            return [$(this).index()];
        }).toArray();

        return rowIndexes.join(',');
    }

    $('.btn-transaction-download-pdf').click((e) => {
        let message = '¿Quieres descargar la transacción en formato PDF?';

        if (confirm(message) == true) {
            showWaitingModal();

            const element = e.currentTarget;
            const elementID = $(element).data('elementid');

            const data = {
                "transactionID": elementID
            };

            $.ajax({
                "url": '@Url.Action(nameof(TransactionController.ExportTransactionToPDF), mainControllerName)',
                "contentType": 'application/json',
                "data": JSON.stringify(data),
                "method": 'POST',
                "timeout": 0,
                "success": function (response) {
                    printToPDF(response);
                    //window.open(response, '_blank');
                },
                "error": function (error) {
                    window.open(response, '_blank');
                },
                "complete": function (response) {
                    //window.open(response, '_blank');
                    hideWaitingModal();
                }
            });
        }
    });

    function printToPDF(content) {
        var printWindow = window.open('', '_blank');

        printWindow.document.write(content);

        printWindow.document.addEventListener('DOMContentLoaded', function () {
            printWindow.print();
        });
    }
</script>