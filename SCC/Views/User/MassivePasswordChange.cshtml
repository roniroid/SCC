@using SCC.Controllers;
@using SCC_BL;

@{
    User actualUser = (User)Session[SCC_BL.Settings.AppValues.Session.GLOBAL_ACTUAL_USER];

    int mainCategoryID = (int)SCC_BL.DBValues.Catalog.ELEMENT.ELEMENT_USER;

    string mainControllerName = OverallController.GetControllerName(typeof(UserController));

    string logsControllerName = OverallController.GetControllerName(typeof(LogController));
    string logsActionName = nameof(LogController.Index);

    ViewBag.Title = "Cambio masivo de contraseñas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/panel")
@Styles.Render("~/Content/radio")

@*@Styles.Render("~/Content/datatables")
    @Scripts.Render("~/bundles/datatables")*@

<link href="~/Content/DataTables/datatables.min.css" rel="stylesheet" />
<script src="~/Content/DataTables/datatables.min.js"></script>

<link href="~/Content/Custom/Chosen/chosen.min.css" rel="stylesheet" />
<script src="~/Content/Custom/Chosen/chosen.jquery.min.js"></script>

<link href="~/Content/Custom/Datatables/custom-datatables.css" rel="stylesheet" />

<div class="panel">
    <div class="accordion accordion-flush" id="accordionExample">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    <strong> Cambio de contraseña</strong>
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne"
                 data-bs-parent="#accordionExample">
                <form id="frmManage" action="@Url.Action(nameof(UserController.MassivePasswordChange), OverallController.GetControllerName(typeof(UserController)))" method="post">
                    <div class="accordion-body">
                        <div class="row d-block text-center text-danger required-advise d-none m-5">
                            Por favor, ingrese todos los datos requeridos
                        </div>
                        <div class="row property-field @(!actualUser.HasPermission(SCC_BL.DBValues.Catalog.Permission.CAN_MODIFY_OTHER_USER_PASSWORDS) ? "d-none" : string.Empty)">
                            <div class="col-5 property-field-label">
                                Usuarios para cambio de contraseña <span class="required">*</span>
                            </div>
                            <div class="col-7">
                                @Html.DropDownList(
                                    "userList",
                                    (ViewData[SCC_BL.Settings.AppValues.ViewData.User.MassivePasswordChange.User.NAME] as MultiSelectList),
                                    new
                                    {
                                        @class = "property-field-control",
                                        placeholder = "Usuarios a cambiar la contraseña",
                                        title = "Usuarios a cambiar la contraseña",
                                        multiple = ""
                                    }
                                )
                            </div>
                        </div>
                        <div class="row property-field">
                            <div class="col-5 property-field-label">
                                Contraseña <span class="required">*</span>
                            </div>
                            <div class="col-7">
                                @Html.TextBox("password", null, new { @class = "property-field-control w-75", placeholder = "Contraseña", title = "Contraseña", type = "password", autocomplete = "new-password", required = ""/*, @Value = SCC_BL.Settings.Overall.DEFAULT_PASSWORD*/, @Value = string.Empty, style = "min-width: auto;" })
                                <i class="bx bx-hide" id="togglePassword"></i>
                            </div>
                        </div>
                        <div class="row property-field">
                            <div class="col-5 property-field-label">
                                Confirmar contraseña <span class="required">*</span>
                            </div>
                            <div class="col-7">
                                @Html.TextBox("passwordConfirmation", null, new { @class = "property-field-control w-75", placeholder = "Confirmar contraseña", title = "Confirmar contraseña", type = "password", autocomplete = "new-password", required = ""/*, @Value = SCC_BL.Settings.Overall.DEFAULT_PASSWORD*/, @Value = string.Empty, style = "min-width: auto;" })
                                <i class="bx bx-hide" id="togglePasswordConfirmation"></i>
                            </div>
                        </div>
                    </div>
                    <div class="accordion-footer">
                        <div class="accordion-footer-info">
                            <ul>
                                <li>
                                    <p>* Campos requeridos</p>
                                </li>
                                <li class="d-none">
                                    <p>Contraseña por defecto: @SCC_BL.Settings.Overall.DEFAULT_PASSWORD</p>
                                </li>
                            </ul>
                        </div>
                        <div class="accordion-footer-buttons">
                            <button id="btnSubmit" class="btn-custom-system btn-custom-system-primary" type="submit">Cambiar contraseña</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        fetchMultiSelectBasicData().then(response => {
            let data = response;

            let customData;

            /*customData = {
            };
            data.push(customButton);*/

            startMultiSelect('#userList', data);
        });
    });

    function validatePasswords() {
        return $('#password').val() == $('#passwordConfirmation').val();
    }

    $('#btnSubmit').click(() => {
        if (!validatePasswords) {
            alert('Las contraseñas no coinciden');
            return false;
        }

        const requiredAdviseElement = $('.required-advise');

        if (
            ($('#userList').val() == '' || $('#userList').val() == null)
        ) {
            $(requiredAdviseElement).removeClass('d-none');
            return false;
        }

        const message = '¿Quiere guardar los cambios?';

        if (confirm(message) != true) {
            return false;
        }
    });

    const togglePassword = document.querySelector("#togglePassword");
    const togglePasswordConfirmation = document.querySelector("#togglePasswordConfirmation");

    const password = document.querySelector("#password");
    const passwordConfirmation = document.querySelector("#passwordConfirmation");

    togglePassword.addEventListener("click", function () {
        // toggle the type attribute
        const type = password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("bx-show");
        this.classList.toggle("bx-hide");
    });

    togglePasswordConfirmation.addEventListener("click", function () {
        // toggle the type attribute
        const type = passwordConfirmation.getAttribute("type") === "password" ? "text" : "password";
        passwordConfirmation.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("bx-show");
        this.classList.toggle("bx-hide");
    });

        // prevent form submit
    /*const form = document.querySelector("form");
    form.addEventListener('submit', function (e) {
        e.preventDefault();
    });*/
</script>