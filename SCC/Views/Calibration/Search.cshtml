@using SCC.Controllers;
@using SCC_BL;

@model SCC.ViewModels.TransactionSearchViewModel

@{
    User actualUser = (User)Session[SCC_BL.Settings.AppValues.Session.GLOBAL_ACTUAL_USER];

    int mainCategoryID = (int)SCC_BL.DBValues.Catalog.ELEMENT.ELEMENT_CALIBRATION;

    string mainControllerName = OverallController.GetControllerName(typeof(CalibrationController));

    string logsControllerName = OverallController.GetControllerName(typeof(LogController));
    string logsActionName = nameof(LogController.Index);

    bool hasModel = Model.TransactionSearchHelper != null;

    List<User> allUserList = (List<User>)ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.AllUserList.NAME];

    ViewBag.Title = "Búsqueda de transacciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/panel")
@Styles.Render("~/Content/radio")

@*@Styles.Render("~/Content/datatables")
    @Scripts.Render("~/bundles/datatables")*@

<link href="~/Content/DataTables/datatables.min.css" rel="stylesheet" />
<script src="~/Content/DataTables/datatables.min.js"></script>

<link href="~/Content/Custom/Chosen/chosen.min.css" rel="stylesheet" />
<script src="~/Content/Custom/Chosen/chosen.jquery.min.js"></script>

<link href="~/Content/Custom/Datatables/custom-datatables.css" rel="stylesheet" />

@if (actualUser.HasPermission(SCC_BL.DBValues.Catalog.Permission.CAN_SEARCH_TRANSACTIONS))
{
    string formAction = @Url.Action(nameof(TransactionController.Search), mainControllerName);

    <form id="frmManage" action="@Url.Action(nameof(CalibrationController.Search), CalibrationController.GetControllerName(typeof(CalibrationController)))" method="post">
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="accordionUserData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseUserData" aria-expanded="true" aria-controls="collapseUserData">
                            <strong> Datos relacionados con el usuario</strong>
                        </button>
                    </h2>
                    <div id="collapseUserData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionUserData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Identificación del usuario
                                </div>
                                <div class="col-3">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.UserIdentificationTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.StringTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Tipo de búsqueda",
                                            placeholder = "Tipo de búsqueda",
                                            title = "Tipo de búsqueda",
                                            id = "ddlUserIdentificationTypeID"
                                        }
                                    )
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.UserIdentification,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación del usuario",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Estado del usuario
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.UserStatusID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.UserStatus.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Seleccione un valor",
                                            placeholder = "Seleccione un valor",
                                            title = "Seleccione un valor",
                                            id = "ddlUserStatusID"
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Seleccione los puestos de trabajo
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.WorkspaceIDList,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.Workspace.NAME] as MultiSelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Puestos disponibles",
                                            placeholder = "Puestos disponibles",
                                            title = "Puestos disponibles",
                                            multiple = "",
                                            id = "ddlWorkspaceIDList"
                                        }
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="accordionProgramData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseProgramData" aria-expanded="true" aria-controls="collapseProgramData">
                            <strong> Datos relacionados con el programa</strong>
                        </button>
                    </h2>
                    <div id="collapseProgramData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionProgramData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Seleccione los programas donde las transacciones fueron cargadas
                                </div>
                                <div class="col-9">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.ProgramIDList,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.ProgramList.NAME] as MultiSelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Programas disponibles",
                                            placeholder = "Programas disponibles",
                                            title = "Programas disponibles",
                                            multiple = "",
                                            id = "ddlProgramIDList"
                                        }
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="accordion accordion-flush w-100" id="accordionTransactionData">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseTransactionData" aria-expanded="true" aria-controls="collapseTransactionData">
                            <strong> Datos relacionados con la transacción</strong>
                        </button>
                    </h2>
                    <div id="collapseTransactionData" class="accordion-collapse collapse @(hasModel ? "show" : string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionTransactionData">
                        <div class="accordion-body">
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    El identificador de la transacción contiene el siguiente valor
                                </div>
                                <div class="col-7">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionIdentifier,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación de la transacción",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Identificación del monitoreador
                                </div>
                                <div class="col-3">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.MonitorUserIdentificationTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.StringTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Tipo de búsqueda",
                                            placeholder = "Tipo de búsqueda",
                                            title = "Tipo de búsqueda",
                                            id = "ddlMonitorUserIdentificationTypeID"
                                        }
                                    )
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.MonitorUserIdentification,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Identificación del monitoreador",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Fechas
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    La fecha de la transacción está entre
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateFrom,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha desde",
                                            title = "Fecha desde",
                                            autocomplete = "off",
                                            type = "date",
                                            @Value =
                                                Model.TransactionSearchHelper.TransactionDateFrom != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.TransactionDateFrom).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty
                                        }
                                    )
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateTo,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha hasta",
                                            title = "Fecha hasta",
                                            autocomplete = "off",
                                            type = "date",
                                            @Value =
                                                Model.TransactionSearchHelper.TransactionDateTo != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.TransactionDateTo).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Buscar desde hace
                                </div>
                                <div class="col-3">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateSince,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            aria_label = "Cantidad",
                                            autocomplete = "off",
                                            type = "number"
                                        })
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionDateSinceTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.TimeUnitTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Unidad de tiempo",
                                            placeholder = "Unidad de tiempo",
                                            title = "Unidad de tiempo",
                                            id = "ddlTransactionDateSinceTypeID"
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-4 property-field-label">
                                    La fecha de la evaluación está entre
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateFrom,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha desde",
                                            title = "Fecha desde",
                                            autocomplete = "off",
                                            type = "date",
                                            @Value =
                                                Model.TransactionSearchHelper.EvaluationDateFrom != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.EvaluationDateFrom).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty
                                        }
                                    )
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateTo,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fecha hasta",
                                            title = "Fecha hasta",
                                            autocomplete = "off",
                                            type = "date",
                                            @Value =
                                                Model.TransactionSearchHelper.EvaluationDateTo != null
                                                    ? ((DateTime)Model.TransactionSearchHelper.EvaluationDateTo).ToString("yyyy-MM-dd")
                                                    : /*DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd")*/ string.Empty
                                        }
                                    )
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-3 property-field-label">
                                    Buscar desde hace
                                </div>
                                <div class="col-3">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateSince,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            aria_label = "Cantidad",
                                            autocomplete = "off",
                                            type = "number"
                                        })
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.EvaluationDateSinceTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.TimeUnitTypeID.NAME] as SelectList),
                                        "No importa",
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Unidad de tiempo",
                                            placeholder = "Unidad de tiempo",
                                            title = "Unidad de tiempo",
                                            id = "ddlEvaluationDateSinceTypeID"
                                        }
                                    )
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Texto etiquetas y comentarios
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en la observación general para la llamada
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de la transacción",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1">
                                    <button class="btn-element-action btn-element-action-dark" title="Catacteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en uno de sus atributos
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.AttributeNameText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en atributos",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1">
                                    <button class="btn-element-action btn-element-action-dark" title="Catacteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La llamada incluye el siguiente texto en uno de los comentarios de sus atributos
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.AttributeCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en comentarios de atributos",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1">
                                    <button class="btn-element-action btn-element-action-dark" title="Catacteres mínimos necesarios: 10" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-5 property-field-label">
                                    La transacción incluye alguna de estas etiquetas
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.TransactionLabelText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Texto en etiquetas",
                                            autocomplete = "off"
                                        })
                                </div>
                                <div class="col-1">
                                    <button class="btn-element-action btn-element-action-dark" title="Separar cada entrada con una coma" type="button">
                                        <i class='bx bx-question-mark'></i>
                                    </button>
                                </div>
                            </div>
                            @*<hr />
                                <div class="row d-block text-center m-5">
                                    <h3>
                                        Inteligencia de negocios
                                    </h3>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        La evaluación incluye las siguientes preguntas de inteligencia de negocios
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Texto en etiquetas",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>*@
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Estados de la llamada
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El comentario de disputa incluye el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DisputationText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de disputa",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El comentario de invalidación incluye el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.InvalidationText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de invalidación",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Coaching enviado / leído
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El usuario ha enviado el coaching
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.CoachingSent,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.YesNoQuestion.NAME] as SelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            id = "ddlCoachingSent"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    El usuario ha leído el coaching
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.CoachingRead,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.YesNoQuestion.NAME] as SelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            id = "ddlCoachingRead"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Errores controlables
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Filtro por error controlable
                                </div>
                                <div class="col-6">
                                    @Html.DropDownListFor(modelitem =>
                                        Model.TransactionSearchHelper.ControllableErrorFilterTypeID,
                                        (ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.YesNoQuestion.NAME] as SelectList),
                                        new
                                        {
                                            @class = "property-field-control",
                                            data_placeholder = "Filtro por error controlable",
                                            placeholder = "Filtro por error controlable",
                                            title = "Filtro por error controlable",
                                            id = "ddlControllableErrorFilterTypeID"
                                        })
                                </div>
                            </div>
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Devolución y seguimiento
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Los comentarios de devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Comentarios de devolución",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Las fortalezas en la devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionStrengthCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Fortalezas",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    Los pasos de mejora en la devolución incluyen el siguiente texto
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.DevolutionImprovementStepsCommentText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Pasos de mejora",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            @*<div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El seguimiento de las fortalezas incluye el siguiente texto
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Pasos de mejora",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>
                                <div class="row property-field">
                                    <div class="col-6 property-field-label">
                                        El seguimiento de los pasos de mejora incluye el siguiente texto
                                    </div>
                                    <div class="col-6">
                                        @Html.TextBoxFor(modelitem =>
                                            Model.TransactionSearchHelper.,
                                            null,
                                            new
                                            {
                                                @class = "property-field-control",
                                                placeholder = "Pasos de mejora",
                                                autocomplete = "off"
                                            })
                                    </div>
                                </div>*@
                            <hr />
                            <div class="row d-block text-center m-5">
                                <h3>
                                    Campos personalizados
                                </h3>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    La evaluación incluye el siguiente texto como etiqueta en uno de los campos opcionales
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.CustomFieldLabelText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Etiqueta",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                            <div class="row property-field">
                                <div class="col-6 property-field-label">
                                    La evaluación incluye el siguiente texto como valir en uno de los campos opcionales
                                </div>
                                <div class="col-6">
                                    @Html.TextBoxFor(modelitem =>
                                        Model.TransactionSearchHelper.CustomFieldValueText,
                                        null,
                                        new
                                        {
                                            @class = "property-field-control",
                                            placeholder = "Valor",
                                            autocomplete = "off"
                                        })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel text-center">
            <button class="btn-custom-system btn-custom-system-secondary" id="btnCancel" type="button">Cancelar</button>
            <button id="btnSubmit" class="btn-custom-system btn-custom-system-primary" type="submit">Buscar</button>
        </div>
    </form>
}

<div class="tableContainer">
    <table class="display cell-border" id="tbInfo">
        <thead>
            <tr>
                <th class="d-flex justify-content-center align-content-center">
                    <input class="transaction-selected-all" type="checkbox" />
                </th>
                <th>
                    Identificador
                </th>
                <th>
                    Usuario monitoreado
                </th>
                <th>
                    Supervisor
                </th>
                <th>
                    Fecha de la transacción
                </th>
                <th>
                    Fecha de la evaluación
                </th>
                <th>
                    Programa
                </th>
                <th>
                    Comentario
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Transaction transaction in Model.TransactionList)
            {
                string tableRowClass = string.Empty;
                if (transaction.BasicInfo.StatusID == (int)SCC_BL.DBValues.Catalog.STATUS_TRANSACTION.DELETED)
                {
                    tableRowClass +=
                        string.IsNullOrEmpty(tableRowClass) ?
                            "strikethrough" :
                            " strikethrough";
                }

                <tr class="@tableRowClass" data-transactionid="@transaction.ID">
                    <td class="d-flex justify-content-center align-content-center">
                        <input class="transaction-selected" type="checkbox" />
                    </td>
                    <td>
                        <a href="@Url.Action(nameof(TransactionController.Edit), OverallController.GetControllerName(typeof(TransactionController)), new { transactionID = transaction.ID })" target="_blank">@transaction.Identifier</a>
                    </td>
                    <td>
                        @{
                            User userToEvaluate = allUserList.Where(e => e.ID == transaction.UserToEvaluateID).FirstOrDefault();
                        }

                        @userToEvaluate.Person.SurName, @userToEvaluate.Person.FirstName
                    </td>
                    <td>
                        <ul>
                            @foreach (UserSupervisorCatalog userSupervisorCatalog in userToEvaluate.SupervisorList)
                            {
                                User supervisorUser = allUserList.Where(e => e.ID == userSupervisorCatalog.SupervisorID).FirstOrDefault();

                                <li>@supervisorUser.Person.SurName, @supervisorUser.Person.FirstName</li>
                            }
                        </ul>
                    </td>
                    <td>@transaction.TransactionDate.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.EvaluationDate.ToString("dd/MM/yyyy")</td>
                    <td>
                        @{
                            int? programID = null;

                            List<ProgramFormCatalog> programFormCatalogList = (List<ProgramFormCatalog>)ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.ProgramFormList.NAME];
                            List<Program> allProgramList = (List<Program>)ViewData[SCC_BL.Settings.AppValues.ViewData.Calibration.Search.AllProgramList.NAME];

                            ProgramFormCatalog programFormCatalog = programFormCatalogList.Where(e => e.FormID == transaction.FormID).LastOrDefault();
                            programID = programFormCatalogList.FirstOrDefault().ProgramID; 
                            
                            Program program = allProgramList.Where(e => e.ID == programID.Value).FirstOrDefault();
                        }

                        @program.Name
                    </td>
                    <td>
                        @transaction.Comment
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        fetchDatatableBasicData().then(response => {
            const dateNow = new Date();
            let fileName = 'Búsqueda de transacciones' + '_' + dateNow.getFullYear() + '_' + (parseInt(dateNow.getMonth()) + 1).toString() + '_' + dateNow.getDate() + '_' + dateNow.getHours() + '_' + dateNow.getMinutes() + '_' + dateNow.getSeconds();

            let data = response;

            let customData;

            /*customData = {
            };*/

            let excelButton =
            {
                "title": null,
                "filename": fileName,
                "extend": "excel",
                "className": "btn-sm",
                "exportOptions": {
                    "columns": [1, 2, 3, 4, 5, 6, 7],
                    "rows": ":not('.strikethrough')"
                }
            };

            let pdfButton =
            {
                "title": null,
                "filename": fileName,
                "extend": "pdfHtml5",
                "className": "btn-sm",
                "orientation": "landscape",
                "pageSize": "LEGAL",
                "exportOptions": {
                    "columns": [1, 2, 3, 4, 5, 6, 7],
                    "rows": ":not('.strikethrough')"
                }
            };

            let copyButton =
            {
                "title": null,
                "filename": fileName,
                "extend": 'copy',
                "text": 'Copiar',
                "exportOptions":
                {
                    "modifier": {
                        page: 'current'
                    },
                    "columns": [1, 2, 3, 4, 5, 6, 7],
                    "rows": ":not('.strikethrough')"
                }
            };

            data["buttons"].push(excelButton);
            data["buttons"].push(pdfButton);
            data["buttons"].push(copyButton);

            data["order"] = [];
            data["columnDefs"] = [
                {
                    orderable: false, targets: 0
                }
            ];

            startDataTable('#tbInfo', data);

            let toolbarControls = '';

            @*toolbarControls += '<div class="row text-center"><form id="frmManage" action="@Url.Action(nameof(CalibrationController.Edit), CalibrationController.GetControllerName(typeof(CalibrationController)))" method="get"><input id="hdTransactionIDList" name="transactionIDList" type="hidden" /><button class="btn-sm border border-dark m-3 p-3" title="Crear calibración" type="submit">Ejecutar</button></form></div>';*@

            toolbarControls += '<div class="row text-center"><button id="btnExecute" class="btn-sm border border-dark m-3 p-3" title="Crear calibración" type="button">Ejecutar</button></div>';

            $('div.toolbar').html(toolbarControls);

            /*$('#frmManage').submit((e) => {
                $('#hdTransactionIDList').val(getSelectedTransactionID());
            });*/

            /*$('#btnExecute').click(() => {
                const data = {
                    transactionIDList = getSelectedTransactionID()
                };

                $.ajax({
                    "url": '',
                    "contentType": 'application/json',
                    "data": data,
                    "method": 'GET',
                    "timeout": 0,
                    "success": function(response) {
                        window.open(response.url, '_self');
                    },
                    "error": function (response) {
                        window.open(response.url, '_self');
                    },
                    "complete": function (response) {
                        window.open(response.url, '_self');
                    }
                });z
            });*/

            $('#btnExecute').click(() => {
                getSelectedTransactionID()
                    .then((response) => {
                        let url = '@Url.Action(nameof(CalibrationController.Edit), mainControllerName)';
                        url += '?transactionIDList=';

                        for (var i = 0; i < response.length; i++) {
                            if (i != 0) {
                                url += ',';
                            }
                            url += response[i];
                        }

                        window.open(url, '_self');
                    });
            });

            @*$('#frmManage').submit(() => {
                getSelectedTransactionID()
                    .then((response) => {
                        $('#hdTransactionIDList').val(JSON.stringify(response));
                        //window.open('@Url.Action(nameof(CalibrationController.Edit), mainControllerName)?transactionIDList=' + JSON.stringify(response), '_self');
                    });
            });*@
        });

        fetchMultiSelectBasicData().then(response => {
            let data = response;

            startMultiSelect('#ddlUserIdentificationTypeID', data);
            startMultiSelect('#ddlUserStatusID', data);
            startMultiSelect('#ddlWorkspaceIDList', data);
            startMultiSelect('#ddlProgramIDList', data);
            startMultiSelect('#ddlMonitorUserIdentificationTypeID', data);
            startMultiSelect('#ddlTransactionDateSinceTypeID', data);
            startMultiSelect('#ddlEvaluationDateSinceTypeID', data);
            startMultiSelect('#ddlCoachingSent', data);
            startMultiSelect('#ddlCoachingRead', data);
            startMultiSelect('#ddlControllableErrorFilterTypeID', data);
        });

        @if (Model.TransactionList.Count() > 0)
        {
            @:window.location.href = '#tbInfo';
        }
    });

    $('.transaction-selected-all').change((e) => {
        $('.transaction-selected').each((index, f) => {
            $(f)[0].checked = $(e.currentTarget)[0].checked;
        });
    });

    async function getSelectedTransactionID() {
        let selectedTransactionArray = [];

        await $('.transaction-selected').each((index, f) => {
            if ($(f)[0].checked) {
                let rowParent = $(f).parent().parent();
                let currentTransactionID = parseInt($(rowParent).data('transactionid'));
                selectedTransactionArray.push(currentTransactionID);
            }
        });

        return selectedTransactionArray;
    }

    $('#btnCancel').click(() => {
        window.open('@Url.Action(nameof(CalibrationController.Search), mainControllerName)', '_self');
    });

    $('#btnSubmit').click(() => {
        const message = '¿Quiere guardar los cambios?';

        if (confirm(message) != true) {
            return false;
        }
    });
</script>